@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Autobot-themed color palette */
    --background: 210 50% 3%;
    --foreground: 214 50% 95%;

    --card: 210 50% 5%;
    --card-foreground: 214 50% 95%;

    --popover: 210 50% 5%;
    --popover-foreground: 214 50% 95%;

    --primary: 214 95% 55%; /* Autobot blue */
    --primary-foreground: 210 50% 5%;

    --secondary: 214 20% 15%;
    --secondary-foreground: 214 50% 95%;

    --muted: 214 20% 15%;
    --muted-foreground: 214 20% 65%;

    --accent: 200 95% 50%; /* Cyan accent */
    --accent-foreground: 210 50% 5%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 214 50% 95%;

    --border: 214 20% 20%;
    --input: 214 20% 15%;
    --ring: 214 95% 55%;

    --success: 142 76% 50%;
    --warning: 38 92% 55%;
    --info: 199 89% 55%;

    /* Autobot theme colors */
    --autobot-blue: 214 95% 55%;
    --autobot-cyan: 200 95% 50%;
    --autobot-red: 0 95% 60%;
    --autobot-silver: 210 20% 60%;
    --autobot-dark: 210 50% 5%;

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--autobot-blue)), hsl(var(--autobot-cyan)));
    --gradient-background: linear-gradient(135deg, hsl(210 50% 3%), hsl(214 50% 8%));
    --gradient-card: linear-gradient(135deg, hsl(210 50% 5% / 0.8), hsl(214 50% 10% / 0.9));
    --gradient-autobot: linear-gradient(45deg, hsl(var(--autobot-blue)), hsl(var(--autobot-cyan)), hsl(var(--autobot-blue)));

    /* Shadows */
    --shadow-glow: 0 10px 30px -10px hsl(var(--autobot-blue) / 0.5);
    --shadow-autobot: 0 0 40px hsl(var(--autobot-cyan) / 0.6);
    --shadow-card: 0 8px 32px hsl(210 50% 3% / 0.8);

    --radius: 0.75rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }

  /* Circuit pattern background */
  .bg-circuit-pattern {
    background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23007ACC' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  }

  /* Autobot animations */
  @keyframes autobot-glow {
    0%, 100% { box-shadow: 0 0 20px hsl(var(--autobot-blue) / 0.3); }
    50% { box-shadow: 0 0 40px hsl(var(--autobot-cyan) / 0.6); }
  }

  .animate-autobot-glow {
    animation: autobot-glow 2s ease-in-out infinite;
  }

  /* Mechanical border effect */
  .border-mechanical {
    border: 2px solid hsl(var(--autobot-blue) / 0.3);
    position: relative;
  }

  .border-mechanical::before {
    content: '';
    position: absolute;
    inset: -2px;
    padding: 2px;
    background: linear-gradient(45deg, hsl(var(--autobot-blue)), hsl(var(--autobot-cyan)));
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
  }
}